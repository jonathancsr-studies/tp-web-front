{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport 'scrollingelement';\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar DisableScroll =\n/*#__PURE__*/\nfunction () {\n  function DisableScroll() {\n    var _this = this;\n\n    _classCallCheck(this, DisableScroll);\n\n    _defineProperty(this, \"handleWheel\", function (e) {\n      e.preventDefault();\n    });\n\n    _defineProperty(this, \"handleScroll\", function () {\n      var _window;\n\n      (_window = window).scrollTo.apply(_window, _toConsumableArray(_this.lockToScrollPos));\n    });\n\n    _defineProperty(this, \"handleKeydown\", function (e) {\n      var keys = _this.options.keyboardKeys;\n      /* istanbul ignore else */\n\n      if (['INPUT', 'TEXTAREA'].indexOf(e.target.tagName) !== -1) {\n        keys = _this.options.authorizedInInputs;\n      }\n      /* istanbul ignore else */\n\n\n      if (keys.indexOf(e.keyCode) !== -1) {\n        e.preventDefault();\n      }\n    });\n\n    this.options = {\n      disableWheel: true,\n      disableScroll: true,\n      disableKeys: true,\n      keyboardKeys: [32, 33, 34, 35, 36, 37, 38, 39, 40],\n      authorizedInInputs: [32, 37, 38, 39, 40] // space: 32, page up: 33, page down: 34, end: 35, home: 36\n      // left: 37, up: 38, right: 39, down: 40\n\n    };\n    this.element = canUseDOM ? document.scrollingElement : null;\n    this.lockToScrollPos = [0, 0];\n  }\n  /**\n   * Disable Page Scroll\n   * @external Node\n   *\n   * @param {HTMLElement} [element] - DOM Element, usually document.body\n   * @param {object} [options] - Change the initial options\n   */\n\n\n  _createClass(DisableScroll, [{\n    key: \"on\",\n    value: function on(element, options) {\n      if (!canUseDOM) return;\n      this.element = element || this.element;\n      this.options = _objectSpread({}, this.options, options);\n      var _this$options = this.options,\n          disableKeys = _this$options.disableKeys,\n          disableScroll = _this$options.disableScroll,\n          disableWheel = _this$options.disableWheel;\n      /* istanbul ignore else */\n\n      if (disableWheel) {\n        document.addEventListener('wheel', this.handleWheel);\n        document.addEventListener('touchmove', this.handleWheel);\n      }\n      /* istanbul ignore else */\n\n\n      if (disableScroll) {\n        this.lockToScrollPos = [this.element.scrollLeft || this.element.scrollX, this.element.scrollTop || this.element.scrollY];\n        document.addEventListener('scroll', this.handleScroll);\n      }\n      /* istanbul ignore else */\n\n\n      if (disableKeys) {\n        document.addEventListener('keydown', this.handleKeydown);\n      }\n    }\n    /**\n     * Re-enable page scrolls\n     */\n\n  }, {\n    key: \"off\",\n    value: function off() {\n      if (!canUseDOM) return;\n      document.removeEventListener('wheel', this.handleWheel);\n      document.removeEventListener('touchmove', this.handleWheel);\n      document.removeEventListener('scroll', this.handleScroll);\n      document.removeEventListener('keydown', this.handleKeydown);\n    }\n  }]);\n\n  return DisableScroll;\n}();\n\nexport default new DisableScroll();","map":null,"metadata":{},"sourceType":"module"}