{"ast":null,"code":"var _jsxFileName = \"/home/jonathan/Documentos/cefet-web-tp/client/src/componentes/IndexPage/Register.js\";\nimport React, { Component } from \"react\";\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { Link, withRouter } from 'react-router-dom';\nimport { register } from '../UserFunctions';\nimport './loginAndRegister.css';\n\nclass Register extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.state = {\n      show: false,\n      username: '',\n      email: '',\n      password: '',\n      firstname: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const user = {\n      username: this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n      name: this.state.firstname\n    };\n    register(user).then(res => {\n      this.props.history.push('/');\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      show: false\n    });\n  }\n\n  handleShow() {\n    this.setState({\n      show: true\n    });\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(Button, {\n      variant: \"secondary mrl-small blueBackgroundColor textGoldColor\",\n      onClick: this.handleShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Modal, {\n      ref: \"modal\",\n      show: this.state.show,\n      onHide: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Modal.Header, {\n      closeButton: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Modal.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Register\")), React.createElement(Modal.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Nome\"), React.createElement(Form.Control, {\n      name: \"firstname\",\n      value: this.state.firstname,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"Nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"NickName\"), React.createElement(Form.Control, {\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.onChange,\n      type: \"text\",\n      placeholder: \"NickName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Form.Control, {\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.onChange,\n      type: \"email\",\n      placeholder: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Senha\"), React.createElement(Form.Control, {\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.onChange,\n      type: \"password\",\n      placeholder: \"Senha\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), ['checkbox'].map(type => React.createElement(\"div\", {\n      key: \"inline-\".concat(type),\n      className: \"mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Form.Check, {\n      inline: true,\n      label: \"Lembrar senha\",\n      type: type,\n      id: \"inline-\".concat(type, \"-1\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      variant: \"primary blueBackgroundColor marginCenter textGoldColor\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" Register \"))))));\n  }\n\n}\n\nexport default withRouter(Register);","map":{"version":3,"sources":["/home/jonathan/Documentos/cefet-web-tp/client/src/componentes/IndexPage/Register.js"],"names":["React","Component","Modal","Button","Form","Link","withRouter","register","Register","constructor","props","context","handleShow","bind","handleClose","state","show","username","email","password","firstname","onChange","onSubmit","e","setState","target","name","value","preventDefault","user","then","res","history","push","render","map","type"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport { Link, withRouter } from 'react-router-dom'\nimport { register } from '../UserFunctions'\n\n\nimport './loginAndRegister.css'\n\nclass Register extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.handleShow = this.handleShow.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n\n        this.state = {\n            show: false,\n            username: '',\n            email: '',\n            password: '',\n            firstname: ''\n        };\n\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value })\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n\n        const user = {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password,\n            name: this.state.firstname\n        }\n\n        register(user).then(res => {\n            \n            this.props.history.push('/')\n        })\n    }\n\n    handleClose() {\n        this.setState({ show: false });\n    }\n\n    handleShow() {\n        this.setState({ show: true });\n    }\n    render() {\n        return (\n            <>\n                <Button variant=\"secondary mrl-small blueBackgroundColor textGoldColor\" onClick={this.handleShow}>\n                    Register\n                </Button>\n                <Modal ref='modal' show={this.state.show} onHide={this.handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Register</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <Form>\n                            <Form.Label>Nome</Form.Label>\n                            <Form.Control\n                                name=\"firstname\"\n                                value={this.state.firstname}\n                                onChange={this.onChange}\n                                type=\"text\"\n                                placeholder=\"Nome\" /><br />\n                            <Form.Label>NickName</Form.Label>\n                            <Form.Control name=\"username\"\n                                value={this.state.username}\n                                onChange={this.onChange}\n                                type=\"text\" placeholder=\"NickName\" /><br />\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control name=\"email\"\n                                    value={this.state.email}\n                                    onChange={this.onChange}\n                                    type=\"email\" placeholder=\"E-mail\" />\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Senha</Form.Label>\n                                <Form.Control name=\"password\"\n                                    value={this.state.password}\n                                    onChange={this.onChange}\n                                    type=\"password\" placeholder=\"Senha\" />\n                            </Form.Group>\n                            {['checkbox'].map(type => (\n                                <div key={`inline-${type}`} className=\"mb-3\">\n                                    <Form.Check inline label=\"Lembrar senha\" type={type} id={`inline-${type}-1`} />\n                                </div>\n                            ))}\n                            <Button variant=\"primary blueBackgroundColor marginCenter textGoldColor\" type=\"submit\">\n                                <Link to='/' onClick={this.onSubmit}> Register </Link>\n                            </Button>\n                        </Form>\n                    </Modal.Body>\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default withRouter(Register)"]},"metadata":{},"sourceType":"module"}