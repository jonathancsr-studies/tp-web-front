{"ast":null,"code":"var _jsxFileName = \"/home/jonathan/Documentos/cefet-web-tp/client/src/componentes/World/components/widgets/boxText/boxText.js\";\nimport React, { Component } from 'react';\nimport './boxText.css';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { getText } from '../../../../WorldFunctions';\nimport { saveText } from '../../../../WorldFunctions';\n\nconst jwt = require(\"jsonwebtoken\");\n\nconst userId = window.location.href.split('World')[1];\nconst userLogado = localStorage.usertoken == null ? -1 : jwt.decode(localStorage.usertoken).id;\nconst editavel = userId == userLogado ? true : false;\n\nclass boxText extends Component {\n  constructor(props) {\n    super(props);\n\n    this.findText = () => {\n      const user = {\n        id_user: userId\n      };\n      getText(user).then(res => {\n        if (res.data.length == 0) {\n          this.state.data = \"<p>Adicione aqui suas principais anotações!</p><br/><strong><p>E customize como desejar. </p></strong> <br/><p></p><p></p>\";\n        } else {\n          this.state.data = res.data[0].text;\n          this.forceUpdate();\n        }\n      });\n    };\n\n    this.findText();\n    this.state = {\n      data: null\n    };\n  }\n\n  componentDidMount() {}\n\n  onChange(content) {\n    console.log('onChange', content);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"containerWidgets\",\n      ref: \"containerWidgets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"ul-widgets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"boxText-dimension\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(CKEditor, {\n      editor: ClassicEditor,\n      data: this.state.data,\n      onInit: editor => {\n        console.log('Editor is ready to use!', editor);\n      },\n      onChange: (event, editor) => {\n        const data = editor.getData();\n        console.log({\n          data\n        });\n        const boxText = {\n          id_user: userId,\n          text: data\n        };\n        console.log(editavel);\n\n        if (editavel) {\n          saveText(boxText).then(res => {\n            console.log(\"Salvo!\");\n          });\n        }\n      },\n      onBlur: editor => {\n        console.log('Blur.', editor);\n      },\n      onFocus: editor => {\n        console.log('Focus.', editor);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default boxText;","map":{"version":3,"sources":["/home/jonathan/Documentos/cefet-web-tp/client/src/componentes/World/components/widgets/boxText/boxText.js"],"names":["React","Component","CKEditor","ClassicEditor","getText","saveText","jwt","require","userId","window","location","href","split","userLogado","localStorage","usertoken","decode","id","editavel","boxText","constructor","props","findText","user","id_user","then","res","data","length","state","text","forceUpdate","componentDidMount","onChange","content","console","log","render","editor","event","getData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './boxText.css'\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { getText } from '../../../../WorldFunctions'\nimport { saveText } from '../../../../WorldFunctions'\nconst jwt = require(\"jsonwebtoken\")\nconst userId = window.location.href.split('World')[1]\nconst userLogado = localStorage.usertoken == null ? -1 : jwt.decode(localStorage.usertoken).id;\nconst editavel = userId == userLogado ? true : false;\n\n\nclass boxText extends Component {\n\n    constructor(props) {\n        super(props)\n        this.findText();\n        this.state = {\n            data: null\n        }\n\n    }\n\n    findText = () => {\n\n        const user = {\n            id_user: userId\n        }\n        getText(user).then(res => {\n            if (res.data.length == 0) {\n                this.state.data = \"<p>Adicione aqui suas principais anotações!</p><br/><strong><p>E customize como desejar. </p></strong> <br/><p></p><p></p>\"\n            } else {\n                this.state.data = res.data[0].text;\n                this.forceUpdate();\n            }\n            \n        })\n\n    }\n\n    componentDidMount() {\n\n    }\n    onChange(content) {\n        console.log('onChange', content);\n    }\n    render() {\n        return (\n            <div className='containerWidgets' ref='containerWidgets'>\n                <ul className=\"ul-widgets\">\n                    <li>\n                        {/*<Gallery></Gallery>*/}\n\n\n                    </li>\n                </ul>\n\n                <div className=\"boxText-dimension\">\n                    <CKEditor\n                        editor={ClassicEditor}\n                        data={this.state.data}\n                        onInit={editor => {\n                            console.log('Editor is ready to use!', editor);\n                        }}\n                        onChange={(event, editor) => {\n                            const data = editor.getData();\n                            console.log({ data });\n\n                            const boxText = {\n                                id_user: userId,\n                                text: data\n                            }\n                            console.log(editavel)\n                            if (editavel) {\n                                saveText(boxText).then(res => {\n                                    console.log(\"Salvo!\")\n                                })\n                            }\n                        }}\n                        onBlur={editor => {\n                            console.log('Blur.', editor);\n                        }}\n                        onFocus={editor => {\n                            console.log('Focus.', editor);\n                        }}\n                    />\n                </div>\n\n            </div>\n\n        )\n    }\n}\n\nexport default boxText"]},"metadata":{},"sourceType":"module"}